<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>gengu</groupId>
	<artifactId>2016</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<!-- 编码 -->
	<properties>
		<project.build.sourceEncoding>GBK</project.build.sourceEncoding>
	</properties>
	<!-- 国内下载地址(阿里云) -->
	<repositories>
		<repository>
			<id> alimaven</id>
			<name> aliyun maven</name>
			<url> http://maven.aliyun.com/nexus/content/groups/public/</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>alimaven</id>
			<name> aliyun maven</name>
			<url> http://maven.aliyun.com/nexus/content/groups/public/</url>
		</pluginRepository>
	</pluginRepositories>
	<!-- 编译的版本 -->
	<build>
		<sourceDirectory>src</sourceDirectory>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<defaultLibBundleDir>lib</defaultLibBundleDir>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Class-Path>lib/trident-7.0.jar lib/substance-7.0.jar</Class-Path>
						</manifestEntries>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.gengu.enter.EnterProgram</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- 拷贝依赖的jar包到lib目录 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- ${project.build.directory}是maven变量，内置的，表示target目录,如果不写，将在跟目录下创建/lib -->
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<!-- excludeTransitive:是否不包含间接依赖包，比如我们依赖A，但是A又依赖了B，我们是否也要把B打进去 默认不打 -->
							<excludeTransitive>false</excludeTransitive>
							<!-- 复制的jar文件去掉版本信息 -->
							<!-- stripVersion>true</stripVersion -->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>
	<!-- 所需Jar包 -->
	<dependencies>
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.8.11.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.11.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.swinglabs</groupId>
			<artifactId>swingx</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.pushingpixels</groupId>
			<artifactId>substance</artifactId>
			<version>7.0</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/substance.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>org.pushingpixels</groupId>
			<artifactId>trident</artifactId>
			<version>7.0</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/trident.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.14</version>
		</dependency>
	</dependencies>
</project>